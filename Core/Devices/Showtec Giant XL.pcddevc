<?xml version="1.0" encoding="ISO-8859-1"?>
<device image="64 x 64\Giant64.png">
 <information id="PC_DIMMER">
 <name>Giant XL</name>
 <vendor>Showtec</vendor>
 <author>Nussbaum Gerald</author>
 <description>LED Movinghead</description>
 </information>
 <channels>
  <function channel="0" minvalue="0" maxvalue="255" name="PAN" fade="yes" type="pan"/>
  <function channel="1" minvalue="0" maxvalue="255" name="TILT" fade="yes" type="tilt"/>
  <function channel="2" minvalue="0" maxvalue="255" name="PANFINE" fade="yes" type="panfine"/>
  <function channel="3" minvalue="0" maxvalue="255" name="TILTFINE" fade="yes" type="tiltfine"/>
  <function channel="4" minvalue="0" maxvalue="255" name="SPEED" fade="yes" type="speed"/>
  <function channel="5" minvalue="0" maxvalue="255" name="COLOR1" fade="yes" type="color1"/>
  <function channel="6" minvalue="0" maxvalue="255" name="SHUTTER" fade="yes" type="shutter"/>
  <function channel="7" minvalue="0" maxvalue="255" name="DIMMER" fade="yes" type="dimmer"/>
  <function channel="8" minvalue="0" maxvalue="255" name="GOBO1" fade="yes" type="gobo1"/>
  <function channel="9" minvalue="0" maxvalue="255" name="GOBO1ROT" fade="yes" type="gobo1rot"/>
  <function channel="10" minvalue="0" maxvalue="255" name="OPTION" fade="yes" type="option"/>
  <function channel="11" minvalue="0" maxvalue="255" name="MOVES" fade="yes" type="moves"/>
  <function channel="12" minvalue="0" maxvalue="255" name="PRISMA" fade="yes" type="prisma"/>
  <function channel="13" minvalue="0" maxvalue="255" name="FOCUS" fade="yes" type="focus"/>
 </channels>
 <initvalues ch0="-1" ch1="-1" ch2="-1" ch3="-1" ch4="-1" ch5="-1" ch6="-1" ch7="-1" ch8="-1" ch9="-1" ch10="-1" ch11="-1" ch12="-1" ch13="-1" />
 <colors>
  <color name="Farbe 1" value="0" valueend="0" r="0" g="0" b="0" />
  <color name="Farbe 2" value="0" valueend="0" r="0" g="0" b="0" />
  <color name="Farbe 3" value="0" valueend="0" r="0" g="0" b="0" />
  <color name="Farbe 4" value="0" valueend="0" r="0" g="0" b="0" />
  <color name="Farbe 5" value="0" valueend="0" r="0" g="0" b="0" />
  <color name="Farbe 6" value="0" valueend="0" r="0" g="0" b="0" />
  <color name="Farbe 7" value="0" valueend="0" r="0" g="0" b="0" />
  <color name="Farbe 8" value="0" valueend="0" r="0" g="0" b="0" />
  <color name="Farbe 9" value="0" valueend="0" r="0" g="0" b="0" />
  <color name="Farbe 10" value="0" valueend="0" r="0" g="0" b="0" />
  <color name="Farbe 11" value="0" valueend="0" r="0" g="0" b="0" />
  <color name="Farbe 12" value="0" valueend="0" r="0" g="0" b="0" />
  <color name="Farbe 13" value="0" valueend="0" r="0" g="0" b="0" />
  <color name="Farbe 14" value="0" valueend="0" r="0" g="0" b="0" />
  <color name="Farbe 15" value="0" valueend="0" r="0" g="0" b="0" />
  <color name="Farbe 16" value="0" valueend="0" r="0" g="0" b="0" />
 </colors>
 <shutter OpenValue="255" CloseValue="0" ChannelName="shutter"/>
 <strobe OffValue="0" MinValue="8" MaxValue="215" ChannelName="shutter"/>
 <dimmer OffValue="0" MaxValue="255"/>
 <gobo1rot LeftMinValue="148" LeftMaxValue="231" OffValue="0" RightMinValue="64" RightMaxValue="147" ChannelName="gobo1rot"/>
 <gobo2rot LeftMinValue="0" LeftMaxValue="0" OffValue="128" RightMinValue="255" RightMaxValue="255" ChannelName="gobo2rot"/>
 <prismarot LeftMinValue="0" LeftMaxValue="0" OffValue="0" RightMinValue="8" RightMaxValue="247" ChannelName="prismarot"/>
 <prisma SingleValue="0" TripleValue="7"/>
 <iris OpenValue="255" CloseValue="0" MinValue="0" MaxValue="255"/>
 <gobos>
  <gobo name="Gobo 1" value="0" valueend="4" filename="Open.png" />
  <gobo name="Gobo 2" value="8" valueend="15" filename="DotCircle6.png" />
  <gobo name="Gobo 3" value="16" valueend="23" filename="BreakGlass2.png" />
  <gobo name="Gobo 4" value="24" valueend="31" filename="Turbine1.png" />
  <gobo name="Gobo 5" value="32" valueend="39" filename="Virus.png" />
  <gobo name="Gobo 6" value="40" valueend="47" filename="Clouds2.png" />
  <gobo name="Gobo 7" value="48" valueend="55" filename="Raster1.png" />
  <gobo name="Gobo 8" value="56" valueend="63" filename="SmNetwerk.png" />
 </gobos>
 <form width="470" height="496">
  <deviceimage top="8" left="8" width="64" height="64"/>
  <devicename top="24" left="80"/>
  <deviceadress top="8" left="80"/>
  <devicedipswitch top="40" left="80"/>
  <position top="8" left="233" height="226" width="226" />
  <colorbox top="242" left="233" height="22" width="145" />
  <dropdown name="GOBOBOX1" top="272" left="233" width="145" height="23" action="gobo1change">
   <item caption="Gobo 1" value="0" picture="Open.bmp" />
   <item caption="Gobo 2" value="0" picture="DotCircle6.bmp" />
   <item caption="Gobo 3" value="0" picture="BreakGlass2.bmp" />
   <item caption="Gobo 4" value="0" picture="Turbine1.bmp" />
   <item caption="Gobo 5" value="0" picture="Virus.bmp" />
   <item caption="Gobo 6" value="0" picture="Clouds2.bmp" />
   <item caption="Gobo 7" value="0" picture="Raster1.bmp" />
   <item caption="Gobo 8" value="0" picture="SmNetwerk.bmp" />
  </dropdown>
  <slider name="PANFINEslider2" top="96" left="8" width="217" height="17" action="PANFINEchange" startvalue="0" endvalue="255" default="0"/>
  <slider name="TILTFINEslider3" top="136" left="8" width="217" height="17" action="TILTFINEchange" startvalue="0" endvalue="255" default="0"/>
  <slider name="SPEEDslider4" top="176" left="8" width="217" height="17" action="SPEEDchange" startvalue="0" endvalue="255" default="0"/>
  <slider name="SHUTTERslider6" top="216" left="8" width="217" height="17" action="SHUTTERchange" startvalue="0" endvalue="255" default="0"/>
  <slider name="DIMMERslider7" top="256" left="8" width="217" height="17" action="DIMMERchange" startvalue="0" endvalue="255" default="0"/>
  <slider name="GOBO1ROTslider9" top="296" left="8" width="217" height="17" action="GOBO1ROTchange" startvalue="0" endvalue="255" default="0"/>
  <slider name="OPTIONslider10" top="336" left="8" width="217" height="17" action="OPTIONchange" startvalue="0" endvalue="255" default="0"/>
  <slider name="MOVESslider11" top="376" left="8" width="217" height="17" action="MOVESchange" startvalue="0" endvalue="255" default="0"/>
  <slider name="PRISMAslider12" top="416" left="8" width="217" height="17" action="PRISMAchange" startvalue="0" endvalue="255" default="0"/>
  <slider name="FOCUSslider13" top="456" left="8" width="217" height="17" action="FOCUSchange" startvalue="0" endvalue="255" default="0"/>
  <label name="PANFINElbl2" top="80" left="8" width="46" height="13" caption="PANFINE"/>
  <label name="TILTFINElbl3" top="120" left="8" width="47" height="13" caption="TILTFINE"/>
  <label name="SPEEDlbl4" top="160" left="8" width="36" height="13" caption="SPEED"/>
  <label name="SHUTTERlbl6" top="200" left="8" width="52" height="13" caption="SHUTTER"/>
  <label name="DIMMERlbl7" top="240" left="8" width="44" height="13" caption="DIMMER"/>
  <label name="GOBO1ROTlbl9" top="280" left="8" width="60" height="13" caption="GOBO1ROT"/>
  <label name="OPTIONlbl10" top="320" left="8" width="41" height="13" caption="OPTION"/>
  <label name="MOVESlbl11" top="360" left="8" width="38" height="13" caption="MOVES"/>
  <label name="PRISMAlbl12" top="400" left="8" width="41" height="13" caption="PRISMA"/>
  <label name="FOCUSlbl13" top="440" left="8" width="36" height="13" caption="FOCUS"/>
 </form>
 <code>
  unit NewDeviceUnit;

  interface

  procedure InitDevice(Device: String);
  procedure FormShow;
  procedure FormRefresh(channel:Integer);
  procedure FormClose;
  procedure PositionXYChange(Top, Left: Integer);
  procedure PANFINEchange;
  procedure TILTFINEchange;
  procedure SPEEDchange;
  procedure ColorBoxChange;
  procedure SHUTTERchange;
  procedure DIMMERchange;
  procedure GOBO1change;
  procedure GOBO1ROTchange;
  procedure OPTIONchange;
  procedure MOVESchange;
  procedure PRISMAchange;
  procedure FOCUSchange;

  implementation

  var
   DontRefresh:boolean;

  procedure InitDevice(Device: String);
  begin
  end;
  procedure FormShow;
  begin
  end;
  procedure FormRefresh(channel:Integer);
  var
    Value:integer;
    r,phi,temp:Double;
  begin
    if not DontRefresh then
    case channel of
      0:
      begin
        if usemhcontrol.checked then
        begin
          // Moving-Head-Steuerung
          temp:=get_channel('tilt')+(get_channel('tiltfine')/256);
          case round(temp) of
            0..127: r:=((127-temp)/127);
            128..255: r:=((temp-128)/127);
          end;
          phi:=(get_channel('pan')+(get_channel('panfine')/256))/255*6.283185307179586476925286766559;	//(X/255)*PI
          PositionXY.Left:=round(r*sin(phi)*(Fadenkreuz.Width/2)+(Fadenkreuz.Width/2)-(PositionXY.Width div 2));
          PositionXY.Top:=round(r*cos(phi)*(Fadenkreuz.Height/2)+(Fadenkreuz.Height/2)-(PositionXY.Width div 2));
        end else
        begin
          // Scanner-Steuerung
          PositionXY.Left:=round(Fadenkreuz.Width * (get_channel('pan')+get_channel('panfine')/256)/255)-(PositionXY.Width div 2);
          PositionXY.Top:=round(Fadenkreuz.Height * (get_channel('tilt')+get_channel('tiltfine')/256)/255)-(PositionXY.Height div 2);
        end;
      end;
      1:
      begin
        if usemhcontrol.checked then
        begin
          // Moving-Head-Steuerung
          temp:=get_channel('tilt')+(get_channel('tiltfine')/256);
          case round(temp) of
            0..127: r:=((127-temp)/127);
            128..255: r:=((temp-128)/127);
          end;
          phi:=(get_channel('pan')+(get_channel('panfine')/256))/255*6.283185307179586476925286766559;	//(X/255)*PI
          PositionXY.Left:=round(r*sin(phi)*(Fadenkreuz.Width/2)+(Fadenkreuz.Width/2)-(PositionXY.Width div 2));
          PositionXY.Top:=round(r*cos(phi)*(Fadenkreuz.Height/2)+(Fadenkreuz.Height/2)-(PositionXY.Width div 2));
        end else
        begin
          // Scanner-Steuerung
          PositionXY.Left:=round(Fadenkreuz.Width * (get_channel('pan')+get_channel('panfine')/256)/255)-(PositionXY.Width div 2);
          PositionXY.Top:=round(Fadenkreuz.Height * (get_channel('tilt')+get_channel('tiltfine')/256)/255)-(PositionXY.Height div 2);
        end;
      end;
      2:
      begin
        PANFINEslider2.position:=get_channel('PANFINE')
      end;
      3:
      begin
        TILTFINEslider3.position:=get_channel('TILTFINE')
      end;
      4:
      begin
        SPEEDslider4.position:=get_channel('SPEED')
      end;
      5:
      begin
        value:=get_channel('color1');
        case value of
          0..0: colorbox.itemindex:=0;
          0..0: colorbox.itemindex:=1;
          0..0: colorbox.itemindex:=2;
          0..0: colorbox.itemindex:=3;
          0..0: colorbox.itemindex:=4;
          0..0: colorbox.itemindex:=5;
          0..0: colorbox.itemindex:=6;
          0..0: colorbox.itemindex:=7;
          0..0: colorbox.itemindex:=8;
          0..0: colorbox.itemindex:=9;
          0..0: colorbox.itemindex:=10;
          0..0: colorbox.itemindex:=11;
          0..0: colorbox.itemindex:=12;
          0..0: colorbox.itemindex:=13;
          0..0: colorbox.itemindex:=14;
          0..0: colorbox.itemindex:=15;
        end;
      end;
      6:
      begin
        SHUTTERslider6.position:=get_channel('SHUTTER')
      end;
      7:
      begin
        DIMMERslider7.position:=get_channel('DIMMER')
      end;
      8:
      begin
        value:=get_channel('gobo1');
        case value of
          0..4: gobobox1.itemindex:=0;
          8..15: gobobox1.itemindex:=1;
          16..23: gobobox1.itemindex:=2;
          24..31: gobobox1.itemindex:=3;
          32..39: gobobox1.itemindex:=4;
          40..47: gobobox1.itemindex:=5;
          48..55: gobobox1.itemindex:=6;
          56..63: gobobox1.itemindex:=7;
        end;
      end;
      9:
      begin
        GOBO1ROTslider9.position:=get_channel('GOBO1ROT')
      end;
      10:
      begin
        OPTIONslider10.position:=get_channel('OPTION')
      end;
      11:
      begin
        MOVESslider11.position:=get_channel('MOVES')
      end;
      12:
      begin
        PRISMAslider12.position:=get_channel('PRISMA')
      end;
      13:
      begin
        FOCUSslider13.position:=get_channel('FOCUS')
      end;
    end;
    DontRefresh:=false;
  end;
  procedure FormClose;
  begin
  end;
  procedure PositionXYChange(Top, Left: Integer);
  var
	phi,r,x,y:Double;
	pan, tilt, panfine, tiltfine:Double;
  begin
	if usemhcontrol.checked then
	begin
		// Moving-Head-Steuerung (Polarkoordinaten)
		x:=((PositionXY.Left+(PositionXY.Width div 2)-(fadenkreuz.Width/2))/fadenkreuz.Width)*2;	//-1..0..1
		y:=((PositionXY.Top+(PositionXY.Height div 2)-(fadenkreuz.Width/2))/fadenkreuz.Height)*2;	//-1..0..1
		r:=sqrt(x*x+y*y);
	
		if (r>0) then
		begin
			if (y>=0) then
				phi:=arccos(x/r)
			else
				phi:=6.283185307179586476925286766559-arccos(x/r);
		end else
			phi:=64;
		
		r:=128-((r/2)*255);
		phi:=(phi/6.283185307179586476925286766559)*255;
		if 64>=phi then
			phi:=phi+191
		else
			phi:=phi-64;
	
		pan:=255-phi;
		tilt:=255-r;
	end else
	begin
		// Scannersteuerung (Kartesische Koordinaten)
		pan:=((PositionXY.Left+(PositionXY.Width div 2))/fadenkreuz.Width)*255;
		tilt:=((PositionXY.Top+(PositionXY.Height div 2))/fadenkreuz.Height)*255;
	end;

	// Ausgabe
	if panmirror.checked then
	begin
		dontrefresh:=true;
		set_channel('pan',trunc(255-pan),trunc(255-pan),0);
		dontrefresh:=true;
		set_channel('panfine',trunc(frac(255-pan)*255),trunc(frac(255-pan)*255),0);
	end	else
	begin
		dontrefresh:=true;
		set_channel('pan',trunc(pan),trunc(pan),0);
		dontrefresh:=true;
		set_channel('panfine',trunc(frac(pan)*255),trunc(frac(pan)*255),0);
	end;
	if tiltmirror.checked then
	begin
		dontrefresh:=true;
		set_channel('tilt',trunc(255-tilt),trunc(255-tilt),0);
		dontrefresh:=true;
		set_channel('tiltfine',trunc(frac(255-tilt)*255),trunc(frac(255-tilt)*255),0);
	end	else
	begin
		dontrefresh:=true;
		set_channel('tilt',trunc(tilt),trunc(tilt),0);
		dontrefresh:=true;
		set_channel('tiltfine',trunc(frac(tilt)*255),trunc(frac(tilt)*255),0);
	end;
  end;
  procedure PANFINEchange;
  begin
    DontRefresh:=true;

    set_channel('PANFINE',-1,PANFINEslider2.position,0);
  end;
  procedure TILTFINEchange;
  begin
    DontRefresh:=true;

    set_channel('TILTFINE',-1,TILTFINEslider3.position,0);
  end;
  procedure SPEEDchange;
  begin
    DontRefresh:=true;

    set_channel('SPEED',-1,SPEEDslider4.position,0);
  end;
  procedure ColorBoxChange;
  begin
    case colorbox.itemindex of
      0: set_channel('color1', -1, 0, 0);
      1: set_channel('color1', -1, 0, 0);
      2: set_channel('color1', -1, 0, 0);
      3: set_channel('color1', -1, 0, 0);
      4: set_channel('color1', -1, 0, 0);
      5: set_channel('color1', -1, 0, 0);
      6: set_channel('color1', -1, 0, 0);
      7: set_channel('color1', -1, 0, 0);
      8: set_channel('color1', -1, 0, 0);
      9: set_channel('color1', -1, 0, 0);
      10: set_channel('color1', -1, 0, 0);
      11: set_channel('color1', -1, 0, 0);
      12: set_channel('color1', -1, 0, 0);
      13: set_channel('color1', -1, 0, 0);
      14: set_channel('color1', -1, 0, 0);
      15: set_channel('color1', -1, 0, 0);
    end;
  end;
  procedure SHUTTERchange;
  begin
    DontRefresh:=true;

    set_channel('SHUTTER',-1,SHUTTERslider6.position,0);
  end;
  procedure DIMMERchange;
  begin
    DontRefresh:=true;

    set_channel('DIMMER',-1,DIMMERslider7.position,0);
  end;
  procedure GOBO1change;
  begin
    case gobobox1.itemindex of
      0: set_channel('gobo1', -1, 0, 0);
      1: set_channel('gobo1', -1, 8, 0);
      2: set_channel('gobo1', -1, 16, 0);
      3: set_channel('gobo1', -1, 24, 0);
      4: set_channel('gobo1', -1, 32, 0);
      5: set_channel('gobo1', -1, 40, 0);
      6: set_channel('gobo1', -1, 48, 0);
      7: set_channel('gobo1', -1, 56, 0);
    end;
  end;
  procedure GOBO1ROTchange;
  begin
    DontRefresh:=true;

    set_channel('GOBO1ROT',-1,GOBO1ROTslider9.position,0);
  end;
  procedure OPTIONchange;
  begin
    DontRefresh:=true;

    set_channel('OPTION',-1,OPTIONslider10.position,0);
  end;
  procedure MOVESchange;
  begin
    DontRefresh:=true;

    set_channel('MOVES',-1,MOVESslider11.position,0);
  end;
  procedure PRISMAchange;
  begin
    DontRefresh:=true;

    set_channel('PRISMA',-1,PRISMAslider12.position,0);
  end;
  procedure FOCUSchange;
  begin
    DontRefresh:=true;

    set_channel('FOCUS',-1,FOCUSslider13.position,0);
  end;
  end.
 </code>
</device>
