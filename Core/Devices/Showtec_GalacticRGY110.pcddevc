<?xml version="1.0" encoding="ISO-8859-1"?>
<device image="64 x 64\el60g.png">
 <information id="PC_DIMMER">
 <name>Galactic RGY-110</name>
 <vendor>Showtec</vendor>
 <author>Christian Nöding</author>
 <description>Laser mit Rot Grün und Gelb</description>
 </information>
 <channels>
  <function channel="0" minvalue="0" maxvalue="255" name="Geschwindigkeit" fade="yes" type="speed"/>
  <function channel="1" minvalue="0" maxvalue="255" name="Grafik" fade="yes" type="picture"/>
  <function channel="2" minvalue="0" maxvalue="255" name="Rotation" fade="yes" type="position"/>
  <function channel="3" minvalue="0" maxvalue="255" name="Zoom" fade="yes" type="zoom"/>
  <function channel="4" minvalue="0" maxvalue="255" name="Pan" fade="yes" type="pan"/>
  <function channel="5" minvalue="0" maxvalue="255" name="Tilt" fade="yes" type="tilt"/>
  <function channel="6" minvalue="0" maxvalue="255" name="Blanking" fade="yes" type="shutter"/>
  <function channel="7" minvalue="0" maxvalue="255" name="Farbe" fade="yes" type="color1"/>
 </channels>
 <initvalues ch0="-1" ch1="-1" ch2="-1" ch3="-1" ch4="-1" ch5="-1" ch6="-1" ch7="-1" />
 <shutter OpenValue="255" CloseValue="0" ChannelName="shutter"/>
 <strobe OffValue="255" MinValue="0" MaxValue="255" ChannelName="shutter"/>
 <dimmer OffValue="0" MaxValue="255"/>
 <gobo1rot LeftMinValue="128" LeftMaxValue="255" OffValue="128" RightMinValue="128" RightMaxValue="255" ChannelName="gobo1rot"/>
 <gobo2rot LeftMinValue="0" LeftMaxValue="0" OffValue="128" RightMinValue="255" RightMaxValue="255" ChannelName="gobo2rot"/>
 <form width="500" height="322">
  <deviceimage top="8" left="8" width="64" height="64"/>
  <devicename top="24" left="80"/>
  <deviceadress top="8" left="80"/>
  <devicedipswitch top="40" left="80"/>
  <position top="80" left="10" height="230" width="230" />
  <slider name="Slider1" top="80" left="250" width="240" height="20" action="slider1change" startvalue="0" endvalue="255" default="0"/>
  <slider name="Slider2" top="130" left="250" width="240" height="20" action="slider2change" startvalue="0" endvalue="255" default="0"/>
  <slider name="Slider3" top="180" left="250" width="240" height="20" action="slider3change" startvalue="0" endvalue="255" default="0"/>
  <slider name="Slider4" top="230" left="250" width="240" height="20" action="slider4change" startvalue="0" endvalue="255" default="0"/>
  <slider name="Slider5" top="280" left="250" width="240" height="20" action="slider5change" startvalue="0" endvalue="255" default="0"/>
  <slider name="Slider6" top="30" left="250" width="240" height="20" action="slider6change" startvalue="0" endvalue="255" default="0"/>
  <label name="Label1" top="60" left="250" width="31" height="13" caption="Grafik:"/>
  <label name="Label2" top="110" left="250" width="43" height="13" caption="Rotation:"/>
  <label name="Label3" top="160" left="250" width="30" height="13" caption="Zoom:"/>
  <label name="Label4" top="210" left="250" width="44" height="13" caption="Blanking:"/>
  <label name="Label5" top="260" left="250" width="30" height="13" caption="Farbe:"/>
  <label name="Label6" top="10" left="250" width="81" height="13" caption="Geschwindigkeit:"/>
 </form>
 <code>
  unit galacticrgy110;

  interface

  procedure InitDevice(Device: String);
  procedure FormShow;
  procedure FormRefresh(channel:Integer);
  procedure FormClose;
  procedure PositionXYChange(Top, Left: Integer);
  procedure slider1change;
  procedure slider2change;
  procedure slider3change;
  procedure slider4change;
  procedure slider5change;
  procedure slider6change;

  implementation

  var
    // hier können globale Variablen definiert werden
  DontRefresh:boolean;

  procedure InitDevice(Device: String);
  begin
    // diese Funktion wird für alle Geräte dieses Typs beim Laden des Projekts ausgeführt.
  end;
  procedure FormShow;
  begin
    // diese Funktion wird bei jedem Laden der Form ausgeführt.
  end;
  procedure FormRefresh(channel:Integer);
  var
    Wert:integer;
  begin
    // diese Funktion wird bei jeder Kanaländerung, die das Gerät betrifft, ausgeführt. Schreiben Sie hier eine Funktion, um die Geräteoberfläche bei einer Kanalwertänderung zu aktualisieren. z.B. wie folgt:
    if not DontRefresh then

    case channel of
      0: slider6.position:=get_channel('speed');
      1: slider1.position:=get_channel('picture');
      2: slider2.position:=get_channel('position');
      3: slider3.position:=get_channel('zoom');
      4..5:
			begin
        PositionXY.Left:=round(Fadenkreuz.Width * get_channel('pan')/255)-(PositionXY.Width div 2);
        PositionXY.Top:=round(Fadenkreuz.Height * get_channel('tilt')/255)-(PositionXY.Height div 2);
			end;
      6: slider4.position:=get_channel('shutter');
      7: slider5.position:=get_channel('color1');
    end;
		DontRefresh:=false;
  end;
  procedure FormClose;
  begin
    // diese Funktion wird bei jedem Schließen der Form ausgeführt.
  end;
  procedure PositionXYChange(Top, Left: Integer);
  var
	phi,r,x,y:single;
	pan, tilt, panfine, tiltfine:single;
  begin
	if usemhcontrol.checked then
	begin
		// Moving-Head-Steuerung (Polarkoordinaten)
		x:=((PositionXY.Left+(PositionXY.Width div 2)-(fadenkreuz.Width/2))/fadenkreuz.Width)*2;	//-1..0..1
		y:=((PositionXY.Top+(PositionXY.Height div 2)-(fadenkreuz.Width/2))/fadenkreuz.Height)*2;	//-1..0..1
		r:=sqrt(x*x+y*y);
	
		if (r>0) then
		begin
			if (y>=0) then
				phi:=arccos(x/r)
			else
				phi:=6.283185307179586476925286766559-arccos(x/r);
		end else
			phi:=64;
		
		r:=128-((r/2)*255);
		phi:=(phi/6.283185307179586476925286766559)*255;
		if 64>=phi then
			phi:=phi+191
		else
			phi:=phi-64;
	
		pan:=255-phi;
		tilt:=255-r;
	end else
	begin
		// Scannersteuerung (Kartesische Koordinaten)
		pan:=((PositionXY.Left+(PositionXY.Width div 2))/fadenkreuz.Width)*255;
		tilt:=((PositionXY.Top+(PositionXY.Height div 2))/fadenkreuz.Height)*255;
	end;

	// Ausgabe
	if panmirror.checked then
	begin
		dontrefresh:=true;
		set_channel('pan',trunc(255-pan),trunc(255-pan),0);
		dontrefresh:=true;
		set_channel('panfine',trunc(frac(255-pan)*255),trunc(frac(255-pan)*255),0);
	end	else
	begin
		dontrefresh:=true;
		set_channel('pan',trunc(pan),trunc(pan),0);
		dontrefresh:=true;
		set_channel('panfine',trunc(frac(pan)*255),trunc(frac(pan)*255),0);
	end;
	if tiltmirror.checked then
	begin
		dontrefresh:=true;
		set_channel('tilt',trunc(255-tilt),trunc(255-tilt),0);
		dontrefresh:=true;
		set_channel('tiltfine',trunc(frac(255-tilt)*255),trunc(frac(255-tilt)*255),0);
	end	else
	begin
		dontrefresh:=true;
		set_channel('tilt',trunc(tilt),trunc(tilt),0);
		dontrefresh:=true;
		set_channel('tiltfine',trunc(frac(tilt)*255),trunc(frac(tilt)*255),0);
	end;
  end;
  procedure slider1change;
  begin
    DontRefresh:=true;

		set_channel('picture',-1,slider1.position,0,0);
  end;
  procedure slider2change;
  begin
    DontRefresh:=true;

		set_channel('position',-1,slider2.position,0,0);
  end;
  procedure slider3change;
  begin
    DontRefresh:=true;

		set_channel('zoom',-1,slider3.position,0,0);
  end;
  procedure slider4change;
  begin
    DontRefresh:=true;

		set_channel('shutter',-1,slider4.position,0,0);
  end;
  procedure slider5change;
  begin
    DontRefresh:=true;

		set_channel('color1',-1,slider5.position,0,0);
  end;
  procedure slider6change;
  begin
    DontRefresh:=true;

		set_channel('speed',-1,slider6.position,0,0);
  end;
  end.
 </code>
</device>
